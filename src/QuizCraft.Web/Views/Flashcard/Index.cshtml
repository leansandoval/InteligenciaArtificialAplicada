@model IEnumerable<QuizCraft.Application.ViewModels.FlashcardViewModel>
@using QuizCraft.Core.Enums
@using QuizCraft.Application.ViewModels

@{
    ViewBag.Title = "Gestión de Flashcards";
    ViewBag.PageTitle = "Mis Flashcards";
    ViewBag.PageSubtitle = "Gestiona y estudia tus tarjetas de estudio personalizadas";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-layer-group text-primary me-2"></i>
            Mis Flashcards
        </h2>
        <p class="text-muted mb-0">
            <i class="fas fa-info-circle me-1"></i>
            Gestiona tus tarjetas de estudio por materia
        </p>
    </div>
    <div>
        <a asp-action="Create" class="btn btn-primary me-2">
            <i class="fas fa-plus me-1"></i>
            Nueva Flashcard
        </a>
        <a asp-controller="Generacion" asp-action="Index" class="btn btn-info me-2" 
           title="Generar flashcards automáticamente desde documentos">
            <i class="fas fa-magic me-1"></i>
            Generar Automáticamente
        </a>
        @if (ViewBag.MateriaSeleccionada != null)
        {
            <a asp-controller="Quiz" asp-action="Create" asp-route-materiaId="@ViewBag.MateriaSeleccionada" class="btn btn-warning me-2" 
               title="Generar quiz automático desde las flashcards de esta materia">
                <i class="fas fa-magic me-1"></i>
                Generar Quiz
            </a>
        }
        @if (Model.Any())
        {
            <a href="#" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#repasoModal">
                <i class="fas fa-play me-1"></i>
                Iniciar Repaso
            </a>
        }
    </div>
</div>

<!-- Filtros avanzados -->
<div class="card mb-4 shadow-sm">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label class="form-label">
                    <i class="fas fa-filter me-1"></i>
                    Filtrar por Materia
                </label>
                <select name="materiaId" class="form-select">
                    <option value="">Todas las materias</option>
                    @foreach (var materia in ViewBag.Materias as List<MateriaDropdownViewModel> ?? new List<MateriaDropdownViewModel>())
                    {
                        <option value="@materia.Id" selected="@(ViewBag.MateriaSeleccionada?.ToString() == materia.Id.ToString())">
                            @materia.Nombre
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">
                    <i class="fas fa-signal me-1"></i>
                    Dificultad
                </label>
                <select name="dificultad" class="form-select">
                    <option value="">Todas las dificultades</option>
                    <option value="1" selected="@(ViewBag.DificultadSeleccionada?.ToString() == "1")">Muy Fácil</option>
                    <option value="2" selected="@(ViewBag.DificultadSeleccionada?.ToString() == "2")">Fácil</option>
                    <option value="3" selected="@(ViewBag.DificultadSeleccionada?.ToString() == "3")">Intermedio</option>
                    <option value="4" selected="@(ViewBag.DificultadSeleccionada?.ToString() == "4")">Difícil</option>
                    <option value="5" selected="@(ViewBag.DificultadSeleccionada?.ToString() == "5")">Muy Difícil</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">
                    <i class="fas fa-search me-1"></i>
                    Buscar
                </label>
                <input type="text" name="busqueda" class="form-control" placeholder="Buscar pregunta..." value="@ViewBag.Busqueda" />
            </div>
            <div class="col-md-2">
                <label class="form-label">&nbsp;</label>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-outline-primary">
                        <i class="fas fa-search me-1"></i>
                        Filtrar
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@if (Model.Any())
{
    <!-- Estadísticas rápidas -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card border-primary">
                <div class="card-body text-center">
                    <i class="fas fa-layer-group fa-2x text-primary mb-2"></i>
                    <h4 class="mb-0">@Model.Count()</h4>
                    <small class="text-muted">Total Flashcards</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-success">
                <div class="card-body text-center">
                    <i class="fas fa-check-circle fa-2x text-success mb-2"></i>
                    <h4 class="mb-0">@Model.Count(f => f.EstaActiva)</h4>
                    <small class="text-muted">Activas</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-warning">
                <div class="card-body text-center">
                    <i class="fas fa-eye fa-2x text-warning mb-2"></i>
                    <h4 class="mb-0">@Model.Where(f => f.VecesRepasada > 0).Count()</h4>
                    <small class="text-muted">Repasadas</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-info">
                <div class="card-body text-center">
                    <i class="fas fa-star fa-2x text-info mb-2"></i>
                    <h4 class="mb-0">@Model.GroupBy(f => f.MateriaId).Count()</h4>
                    <small class="text-muted">Materias</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Lista de Flashcards -->
    <div class="row">
        @foreach (var flashcard in Model)
        {
            <div class="col-lg-6 col-xl-4 mb-4">
                <div class="card h-100 shadow-sm border-0 flashcard-card" 
                     style="border-left: 4px solid @flashcard.MateriaColor !important;">
                    <div class="card-header bg-transparent d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <i class="@flashcard.MateriaIcono me-2" style="color: @flashcard.MateriaColor;"></i>
                            <small class="text-muted">@flashcard.MateriaNombre</small>
                        </div>
                        <div class="d-flex align-items-center">
                            @{
                                var difficultyClass = flashcard.Dificultad switch
                                {
                                    NivelDificultad.MuyFacil => "success",
                                    NivelDificultad.Facil => "info", 
                                    NivelDificultad.Intermedio => "warning",
                                    NivelDificultad.Dificil => "orange",
                                    NivelDificultad.MuyDificil => "danger",
                                    _ => "secondary"
                                };
                            }
                            <span class="badge bg-@difficultyClass">@flashcard.DificultadTexto</span>
                        </div>
                    </div>
                    <div class="card-body">
                        <h6 class="card-title text-truncate" title="@flashcard.Pregunta">
                            <i class="fas fa-question-circle text-primary me-1"></i>
                            @flashcard.Pregunta
                        </h6>
                        <p class="card-text text-muted small" 
                           style="height: 3rem; overflow: hidden; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical;">
                            @flashcard.Respuesta
                        </p>
                        <div class="d-flex justify-content-between align-items-center text-muted small">
                            <div>
                                <i class="fas fa-calendar me-1"></i>
                                @flashcard.FechaCreacion.ToString("dd/MM/yyyy")
                            </div>
                            @if (flashcard.VecesRepasada > 0)
                            {
                                <div>
                                    <i class="fas fa-redo text-success me-1"></i>
                                    @flashcard.VecesRepasada vez@(flashcard.VecesRepasada != 1 ? "es" : "")
                                </div>
                            }
                        </div>
                    </div>
                    <div class="card-footer bg-transparent">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="btn-group btn-group-sm" role="group">
                                <a asp-action="Details" asp-route-id="@flashcard.Id" class="btn btn-outline-info" title="Ver detalles">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@flashcard.Id" class="btn btn-outline-primary" title="Editar">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" class="btn btn-outline-danger" 
                                        onclick="confirmarEliminacion(@flashcard.Id, '@flashcard.Pregunta')" title="Eliminar">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                            @if (flashcard.EstaActiva)
                            {
                                <span class="badge bg-success">
                                    <i class="fas fa-check-circle me-1"></i>Activa
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">
                                    <i class="fas fa-pause-circle me-1"></i>Inactiva
                                </span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Paginación si es necesaria -->
    @if (ViewBag.TotalPaginas > 1)
    {
        <nav aria-label="Navegación de páginas" class="d-flex justify-content-center">
            <ul class="pagination">
                @for (int i = 1; i <= ViewBag.TotalPaginas; i++)
                {
                    <li class="page-item @(i == ViewBag.PaginaActual ? "active" : "")">
                        <a class="page-link" href="?pagina=@i&materiaId=@ViewBag.MateriaSeleccionada&dificultad=@ViewBag.DificultadSeleccionada&busqueda=@ViewBag.Busqueda">@i</a>
                    </li>
                }
            </ul>
        </nav>
    }
}
else
{
    <!-- Estado vacío -->
    <div class="text-center py-5">
        <div class="mb-4">
            <i class="fas fa-layer-group fa-4x text-muted"></i>
        </div>
        <h4 class="text-muted mb-3">¡No tienes flashcards aún!</h4>
        <p class="text-muted mb-4">
            Las flashcards son una excelente herramienta para estudiar de manera eficiente.<br>
            Crea tu primera tarjeta de estudio y comienza a aprender.
        </p>
        <div class="d-flex gap-3 justify-content-center flex-wrap">
            <a asp-action="Create" class="btn btn-primary btn-lg">
                <i class="fas fa-plus me-2"></i>
                Crear mi primera Flashcard
            </a>
            <a asp-controller="Generacion" asp-action="Index" class="btn btn-info btn-lg">
                <i class="fas fa-magic me-2"></i>
                Generar desde Documentos
            </a>
        </div>
        <div class="mt-4">
            <small class="text-muted">
                💡 <strong>Consejo:</strong> Puedes generar flashcards automáticamente subiendo documentos de texto, PDFs o presentaciones
            </small>
        </div>
    </div>
}

<!-- Modal para iniciar repaso -->
@if (Model.Any())
{
    <div class="modal fade" id="repasoModal" tabindex="-1" aria-labelledby="repasoModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="repasoModalLabel">
                        <i class="fas fa-play text-success me-2"></i>
                        Iniciar Sesión de Repaso
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="repasoForm" asp-action="Repaso" method="post">
                        <div class="mb-3">
                            <label class="form-label">Seleccionar Materia para Repasar</label>
                            <select name="materiaId" class="form-select" required>
                                <option value="">Todas las materias</option>
                                @foreach (var materia in ViewBag.Materias as List<MateriaDropdownViewModel> ?? new List<MateriaDropdownViewModel>())
                                {
                                    <option value="@materia.Id">@materia.Nombre</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Dificultad máxima</label>
                            <select name="dificultadMaxima" class="form-select">
                                <option value="">Todas las dificultades</option>
                                <option value="1">Muy Fácil</option>
                                <option value="2">Fácil</option>
                                <option value="3">Intermedio</option>
                                <option value="4">Difícil</option>
                                <option value="5">Muy Difícil</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" form="repasoForm" class="btn btn-success">
                        <i class="fas fa-play me-1"></i>
                        Comenzar Repaso
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        function confirmarEliminacion(id, pregunta) {
            if (confirm(`¿Estás seguro de que deseas eliminar la flashcard: "${pregunta}"?\n\nEsta acción no se puede deshacer.`)) {
                // Crear formulario dinámico para enviar DELETE
                const form = document.createElement('form');
                form.method = 'post';
                form.action = '@Url.Action("Delete")/' + id;
                
                const methodField = document.createElement('input');
                methodField.type = 'hidden';
                methodField.name = '_method';
                methodField.value = 'delete';
                form.appendChild(methodField);
                
                const tokenField = document.createElement('input');
                tokenField.type = 'hidden';
                tokenField.name = '__RequestVerificationToken';
                tokenField.value = $('input[name="__RequestVerificationToken"]').val();
                form.appendChild(tokenField);
                
                document.body.appendChild(form);
                form.submit();
            }
        }

        // Animaciones y efectos visuales
        document.addEventListener('DOMContentLoaded', function() {
            // Efecto hover en las tarjetas
            const cards = document.querySelectorAll('.flashcard-card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-5px)';
                    this.style.transition = 'all 0.3s ease';
                    this.style.boxShadow = '0 8px 25px rgba(0,0,0,0.1)';
                });
                
                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                    this.style.boxShadow = '0 2px 10px rgba(0,0,0,0.1)';
                });
            });
        });
    </script>
}

@section Styles {
    <style>
        .flashcard-card {
            transition: all 0.3s ease;
            border: 1px solid #e3e6f0 !important;
        }
        
        .flashcard-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
        }
        
        .badge.bg-orange {
            background-color: #fd7e14 !important;
        }
        
        .card-title {
            font-size: 0.95rem;
            font-weight: 600;
        }
        
        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
    </style>
}